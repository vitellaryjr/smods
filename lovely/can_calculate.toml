[manifest]
version = "1.0.0"
dump_lua = true
priority = -5

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:get_end_of_round_effect(context)
    if self.debuff then return {} end'''
position = "at"
match_indent = true
payload = '''
function Card:get_end_of_round_effect(context)'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:calculate_dollar_bonus()
    if self.debuff then return end'''
position = "at"
match_indent = true
payload = '''
function Card:calculate_dollar_bonus()
    if not self:can_calculate() then return end'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:calculate_seal(context)
    if self.debuff then return nil end'''
position = "at"
match_indent = true
payload = '''
function Card:calculate_seal(context)'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:calculate_joker(context)
    if self.debuff then return nil end'''
position = "at"
match_indent = true
payload = '''
function Card:calculate_joker(context)'''


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.set == "Joker" and not self.debuff then'''
position = "at"
match_indent = true
payload = '''if self.ability.set == "Joker" then'''


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.debuff then return 0 end'''
position = "at"
match_indent = true
payload = ''